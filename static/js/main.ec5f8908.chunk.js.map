{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/HW3.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","dropbox","dropbox_btn","dropbox_list","exact","to","activeClassName","active","Error404","Message","avatar","name","message","time","styleClass","chat","key","icon","src","alt","header","textChat","messageData","HW1","Affair","affair","deleteAffairCallback","head","buttons","onClick","_id","Affairs","data","setFilter","filter","mappedAffairs","map","a","flex_but","btn_act","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filteredAffairs","als","filterAffairs","t","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","good","someClass","value","onChange","title","placeholder","total","errorWrap","GreetingContainer","users","addUserCallback","setName","setError","length","e","target","replace","trim","alert","defaultUsers","HW3","setUsers","newArr","v1","console","log","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","currentTarget","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox_inp","checked","HW4","text","setText","showAlert","setChecked","column","PreJunior","PATH","Routes","path","render","Junior","JuniorPlus","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ec5f8908.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__25r49\",\"buttons\":\"Affairs_buttons__a6DD0\",\"flex_but\":\"Affairs_flex_but__3QGfZ\",\"btn_act\":\"Affairs_btn_act__3FKWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropbox\":\"Header_dropbox__1HPT7\",\"dropbox_list\":\"Header_dropbox_list__3Ea6f\",\"active\":\"Header_active__1mmgW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1Uwsa\",\"header\":\"Message_header__1b4c9\",\"chat\":\"Message_chat__P8G96\",\"textChat\":\"Message_textChat__2VJey\",\"name\":\"Message_name__2ph39\",\"icon\":\"Message_icon__3trIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__28lSn\",\"error\":\"Greeting_error__3FjTW\",\"good\":\"Greeting_good__Phj1C\",\"buttons\":\"Greeting_buttons__nawZl\",\"total\":\"Greeting_total__17HEq\",\"errorWrap\":\"Greeting_errorWrap__J85Uq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affair_someClass__3bSEv\",\"buttons\":\"Affair_buttons__17oG-\",\"flex_but\":\"Affair_flex_but__1tMyX\",\"btn_act\":\"Affair_btn_act__1RJXL\",\"name\":\"Affair_name__hbukO\",\"head\":\"Affair_head__1i0QB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3gH-L\",\"errorInput\":\"SuperInputText_errorInput__PsV7d\",\"error\":\"SuperInputText_error__3fjSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__afy7m\",\"red\":\"SuperButton_red__3T6vi\",\"buttons\":\"SuperButton_buttons__1D4n8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__x1gEn\",\"column\":\"HW4_column__2Bx-c\",\"title\":\"HW4_title__Pv0OO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__WeGx0\",\"checkbox_inp\":\"SuperCheckbox_checkbox_inp__1u7np\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__L8ky3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HW3_title__3tQ1m\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Header.module.css';\r\nfunction Header() {\r\n    return (\r\n        <div className={s.dropbox}> <span className={s.dropbox_btn}>Menu</span>\r\n            <nav className={s.dropbox_list}>\r\n                <NavLink exact to=\"/pre-junior\" activeClassName={s.active}>Pre-junior</NavLink>  \r\n                <NavLink to=\"/junior\" activeClassName={s.active}>Junior</NavLink>  \r\n                <NavLink to=\"/junior_plus\" activeClassName={s.active}>JuniorPlus</NavLink>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\r\nimport {MessageType} from './HW1';\r\nimport styleClass from './Message.module.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Message({avatar, name, message, time}:MessageType) {\r\n    return (\r\n        <div className={styleClass.message}>\r\n            <div className={styleClass.chat} key={name}>\r\n                <div className={styleClass.icon}><img src={avatar} alt='icon'/></div>\r\n                <div className={styleClass.header}>\r\n                    <ul >\r\n                        <li className={styleClass.name}>{name}</li>\r\n                        <li>{time}</li>\r\n                    </ul>\r\n                    <div className={styleClass.textChat}>\r\n                        {message}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\n\r\n\r\nexport type MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time:string\r\n}\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Some Name\",\r\n    message: \"some text\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affair.module.css';\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id:number) => void // need to fix any\r\n}\r\n\r\nfunction Affair({affair, deleteAffairCallback}: AffairPropsType) {\r\n    const deleteCallback = () => {deleteAffairCallback(affair._id)};// need to fix\r\n\r\n    return (\r\n        <div className={s.head}>\r\n            <span className={s.name}>{affair.name}</span>\r\n\r\n            <button className={s.buttons} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport s from './Affairs.module.css';\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter:FilterType) => void\r\n    deleteAffairCallback: (_id:number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs({data, setFilter, deleteAffairCallback, filter}: AffairsPropsType) {\r\n    const mappedAffairs = data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () =>{ setFilter(\"all\")} // need to fix\r\n    const setHigh = () => {setFilter(\"high\")};\r\n    const setMiddle = () => {setFilter(\"middle\")};\r\n    const setLow = () => {setFilter(\"low\")};\r\n\r\n    return (\r\n        <div>\r\n            {mappedAffairs}\r\n            <div className={s.flex_but}>\r\n                <button\r\n                    className={`${s.buttons} ${filter === 'all' ? s.btn_act : ''}` }\r\n                    onClick={setAll}>All</button>\r\n                <button\r\n                    className={`${s.buttons} ${filter === 'high' ? s.btn_act : ''}`}\r\n                    onClick={setHigh}>High</button>\r\n                <button\r\n                    className={`${s.buttons} ${filter === 'middle' ? s.btn_act : ''}`}\r\n                    onClick={setMiddle}>Middle</button>\r\n                <button\r\n                    className={`${s.buttons} ${filter === 'low' ? s.btn_act : ''}`}\r\n                    onClick={setLow}>Low</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\"| \"low\" | 'middle'; // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority:FilterType\r\n}; // need to fix any\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType)=> { // need to fix any\r\n    switch (filter) {\r\n        case \"high\":\r\n            return affairs.filter(als => als.priority === \"high\");\r\n        case \"middle\":\r\n            return affairs.filter(als => als.priority === \"middle\");\r\n        case \"low\":\r\n            return affairs.filter(als => als.priority === \"low\");\r\n        default:\r\n            return affairs\r\n    }\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number) => affairs\r\n    .filter(t => t._id !== _id);\r\n\r\n     // need to fix any\r\n      // need to fix\r\n\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>) =>void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string | null // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    let inputClass = error? s.error :s.good; // need to fix with (?:)\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <div className={s.someClass}>\r\n                <input\r\n                    value={name}\r\n                    onChange={setNameCallback}\r\n                    className={inputClass}\r\n                    title='Разрешено использовать только русские и латинские буквы'\r\n                    placeholder='Name'/>\r\n\r\n                <button\r\n                    onClick={addUser}\r\n                    className={s.buttons}\r\n                >ADD</button>\r\n                <div className={s.total}><span>{totalUsers}</span></div>\r\n\r\n            </div>\r\n            <div className={s.errorWrap}>\r\n                <span>{error}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name:string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\"); // need to fix any\r\n    const [error, setError] = useState<string | null>(null); // need to fix any\r\n\r\n    const setNameCallback = (e:ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.target.value.replace(/[^\\D]+/g, ''));\r\n        setError(null);\r\n        // need to fix\r\n    };\r\n    const addUser = () => {\r\n        if (name.trim() === ''){\r\n            setError('You must enter a name')\r\n            setName('')\r\n        } else {\r\n\r\n            alert(`Hello ${name} !`);\r\n            // need to fix\r\n            addUserCallback(name.trim());\r\n            setName('')\r\n        }\r\n\r\n    };\r\n    const totalUsers = users.length;\r\n     // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport { v1 } from \"uuid\";\r\nimport s from './HW3.module.css';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\nconst defaultUsers:Array<UserType> = [\r\n]\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>(defaultUsers); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let newArr = {\r\n            _id: v1(),\r\n            name: name\r\n        }\r\n        setUsers([newArr, ...users]);\r\n        console.log(defaultUsers);// need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <div className={s.title}>Homeworks 3</div>\r\n\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error ? `${s.errorInput} ${className ? className : ''}` : `${s.superInput}`; // need to fix with\r\n    // (?:) and\r\n    // s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder='Name'\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.buttons}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange // если есть пропс onChange\r\n        && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.checkbox_inp}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div className={s.title}>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    Check {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}>Check</SuperCheckbox>\r\n            </div>\r\n\r\n\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\n// import HW1 from \"../../h1/HW1\";\r\n// import HW2 from \"../../h2/HW2\";\r\n// import HW3 from \"../../h3/HW3\";\r\n// import HW4 from \"../../h4/HW4\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            Junior\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\n\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport Error404 from './pages/Error404';\r\nimport PreJunior from './pages/PreJunior';\r\nimport Junior from './pages/Junior';\r\nimport JuniorPlus from './pages/JuniorPlus';\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior_plus'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from 'react-router-dom'\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\n// import HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n// import HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5'\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>React homeworks:</div>\r\n\r\n            {/* <HW2/>\r\n            <HW3/>\r\n            <HW4/> */}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}